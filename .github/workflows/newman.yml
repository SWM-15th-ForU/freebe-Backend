name: Run Newman Tests

on:
  push:
    branches: ["develop"]
  pull_request:
    branches: ["develop"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Newman
        run: npm install -g newman

      - name: Create reports directory
        run: mkdir -p newman-reports

      - name: Download Postman Collection
        run: |
          curl --location "https://api.getpostman.com/collections/$COLLECTION_ID" \
          --header "X-Api-Key: $API_KEY" \
          --output postman_collection.json

      - name: Run Newman Tests
        run: |
          newman run postman_collection.json \
          --reporters cli,junit \
          --reporter-junit-export newman-reports/test-results.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: newman-reports/test-results.xml

      - name: Fetch Artifacts
        id: fetch_artifacts
        run: |
          curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts" > artifacts.json
          cat artifacts.json
        # Extract artifact_id from the JSON output if necessary

      - name: Comment on Pull Request
        id: comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: 'Newman Test Results'
          message: |
            **Test Results:**
            Test results are available [here](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/{artifact_id}).

      - name: Update Comment
        if: success()
        run: |
          # Find existing comments and update or add a new one
          COMMENTS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                       "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.issue.number }}/comments")
          # Check if a comment with the same header exists and update it
          # If not, add a new comment
